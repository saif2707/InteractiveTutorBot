version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: tutor-bot-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: tutor-bot
    volumes:
      - mongodb_data:/data/db
    networks:
      - tutor-bot-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: tutor-bot-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tutor-bot-network

  # Backend Server
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: tutor-bot-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/tutor-bot?authSource=admin
      REDIS_URL: redis://redis:6379
      # Add your API keys here
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ELEVENLABS_API_KEY: ${ELEVENLABS_API_KEY}
      ELEVENLABS_VOICE_ID: ${ELEVENLABS_VOICE_ID}
      LUMA_API_KEY: ${LUMA_API_KEY}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      CORS_ORIGIN: http://localhost:3000
    depends_on:
      - mongodb
      - redis
    networks:
      - tutor-bot-network

  # Frontend Client
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: tutor-bot-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://localhost:5000/api
    depends_on:
      - backend
    networks:
      - tutor-bot-network

volumes:
  mongodb_data:
  redis_data:

networks:
  tutor-bot-network:
    driver: bridge